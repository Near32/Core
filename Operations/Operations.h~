#ifndef OPERATIONS_H
#define OPERATIONS_H

#include "../EXP/EXP.h"
#include "../FUNC/FUNC.h"
#include "../VAR/VAR.h"
#include "../MAT/Mat.h"

void toString(const Mat<EXP>& m)
{
	std::cout << "Matrice : " << std::endl;
	
	for(int i=1;i<=m.getLine();i++)
	{
		std::cout << "\t";
		
		for(int j=1;j<=m.getColumn();j++)
		{
			std::cout << m.get(i,j).toString() << "\t"; 
		}
		
		std::cout << std::endl;
	}
	
	std::cout << std::endl;
	
}

void evaluate(const Mat<EXP>& m)
{
	std::cout << "Matrice : " << std::endl;
	
	for(int i=1;i<=m.getLine();i++)
	{
		std::cout << "\t";
		
		for(int j=1;j<=m.getColumn();j++)
		{
			std::cout << m.get(i,j).evaluate() << "\t"; 
		}
		
		std::cout << std::endl;
	}
	
	std::cout << std::endl;
	
}

EXP* F2FDerivate(const EXP* f);
EXP* derivateREC(const EXP& exp, const VAR& var);
EXP derivateFUNCREC(const EXP& exp, const VAR& var);
EXP derivateEXPREC(const EXP& exp, const VAR& var);

#endif
